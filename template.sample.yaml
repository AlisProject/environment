AWSTemplateFormatVersion: 2010-09-09

Parameters:
  ParamAlisAppId:
    Type: 'String'

Resources:
  #
  # ALISアプリケーションID
  # .envrcのALIS_APP_IDが反映される
  #
  AlisAppId:
    Type: "AWS::SSM::Parameter"
    Properties:
      Name: !Sub "${AWS::StackName}AlisAppId"
      Description: |
        サブシステム間を横断するユニークなID
      Type: String
      Value: !Ref ParamAlisAppId

  #
  # プライベートチェーン
  #
  ParityNodesAMI:
    Type: "AWS::SSM::Parameter"
    Properties:
      Name: !Sub "${AWS::StackName}ParityNodesAMI"
      Description: |
        Parity PoAプライベートチェーンを構築するEC2インスタンスに使用するAMIのID
      Type: String
      Value: ami-b026xxxx
    DependsOn: AlisAppId
  BastionAllocationId:
    Type: "AWS::SSM::Parameter"
    Properties:
      Name: !Sub "${AWS::StackName}BastionAllocationId"
      Description: |
        踏み台サーバTのEIPのAllocation ID
      Type: String
      Value: eipalloc-74e9xxxx
    # FYI: 本テンプレートに挿入されている DependsOn句はAWSのAPIの制限を回避するためのもの
    DependsOn: ParityNodesAMI
  NatAllocationId:
    Type: "AWS::SSM::Parameter"
    Properties:
      Name: !Sub "${AWS::StackName}NatAllocationId"
      Description: |
        NATのEIPのAllocation ID
      Type: String
      Value: eipalloc-0de8xxxx
    DependsOn: BastionAllocationId
  EC2DeleteOnTermination:
    Type: "AWS::SSM::Parameter"
    Properties:
      Name: !Sub "${AWS::StackName}EC2DeleteOnTermination"
      Description: |
        生成したEC2インスタンスを削除する時にEBSも同時に削除するか否か
        本番環境ではfalseであるべき。
      Type: String
      Value: "true"
    DependsOn: NatAllocationId
  AccountsNewRequestPassword:
    Type: "AWS::SSM::Parameter"
    Properties:
      Name: !Sub "${AWS::StackName}AccountsNewRequestPassword"
      Description: |
        アカウント新規作成時のRPCリクエストで使用する
        式作成されるアカウントのパスワードとして設定される
      Type: String
      Value: password
    DependsOn: EC2DeleteOnTermination
  ParityNodesInstanceType:
    Type: "AWS::SSM::Parameter"
    Properties:
      Name: !Sub "${AWS::StackName}ParityNodesInstanceType"
      Description: |
        Parity PoAのインスタンスのタイプ
      Type: String
      Value: t2.medium
    DependsOn: AccountsNewRequestPassword
  ParityNodesVolumeSize:
    Type: "AWS::SSM::Parameter"
    Properties:
      Name: !Sub "${AWS::StackName}ParityNodesVolumeSize"
      Description: |
        Parity PoAのインスタンスの容量(GB)
      Type: String
      Value: "8"
    DependsOn: ParityNodesInstanceType
  PrivateChainMainSigner:
    Type: "AWS::SSM::Parameter"
    Properties:
      Name: !Sub "${AWS::StackName}PrivateChainMainSigner"
      Description: |
        プライベートチェーンへの操作を主に担当するSignerのアドレス
      Type: String
      Value: "0x7ad8f90cfa071c8420e3f09fe0e413d0c47502e6"
    DependsOn: ParityNodesVolumeSize
  PrivateChainAlisTokenAddress:
    Type: "AWS::SSM::Parameter"
    Properties:
      Name: !Sub "${AWS::StackName}PrivateChainAlisTokenAddress"
      Description: |
        プライベートチェーンにデプロイされたALISトークンのアドレス
      Type: String
      Value: "0xbbfce3c05aef921b35c7264fff21bb08f490a821"
    DependsOn: PrivateChainMainSigner
  PrivateChainOperationUrl:
    Type: "AWS::SSM::Parameter"
    Properties:
      Name: !Sub "${AWS::StackName}PrivateChainOperationUrl"
      Description: |
        プライベートチェーン操作用URL
      Type: String
      Value: http://example:8545
    DependsOn: PrivateChainAlisTokenAddress
  PrivateChainAwsAccessKey:
    Type: "AWS::SSM::Parameter"
    Properties:
      Name: !Sub "${AWS::StackName}PrivateChainAwsAccessKey"
      Description: |
        プライベートチェーンの機能を利用する場合に必要な情報
          - see: https://github.com/AlisProject/private-chain
        具体的には、プライベートチェーンのAPI GatewayがIAM認証で保護されているため
        その権限を与えられたIAMユーザの認証情報。
        なお、この権限にはIAMロールだけでなくIAMユーザが必須である。
        このIAMユーザの作成自体はCloud formationで自動化されていないので注意。
      Type: String
      Value: AKIAIVGQILXXXXXXXXX
    DependsOn: PrivateChainOperationUrl
  PrivateChainAwsSecretAccessKey:
    Type: "AWS::SSM::Parameter"
    Properties:
      Name: !Sub "${AWS::StackName}PrivateChainAwsSecretAccessKey"
      Description: |
        プライベートチェーンの機能を利用する場合に必要な情報
          - see: https://github.com/AlisProject/private-chain
        具体的には、プライベートチェーンのAPI GatewayがIAM認証で保護されているため
        その権限を与えられたIAMユーザの認証情報。
        なお、この権限にはIAMロールだけでなくIAMユーザが必須である。
        このIAMユーザの作成自体はCloud formationで自動化されていないので注意。
      Type: String
      Value: ZCFj5dn0k031G/hMfiAgxxxxxxxxxxxxxxxxxxxx
    DependsOn: PrivateChainAwsAccessKey
  PrivateChainExecuteApiHost:
    Type: "AWS::SSM::Parameter"
    Properties:
      Name: !Sub "${AWS::StackName}PrivateChainExecuteApiHost"
      Description: |
        プライベートチェーンの機能を利用する場合に必要な情報
          - see: https://github.com/AlisProject/private-chain
        CloudFormationによって生成されたAPI Gatewayのホスト
      Type: String
      Value: xxxxxxxxxx.execute-api.ap-northeast-1.amazonaws.com
    DependsOn: PrivateChainAwsSecretAccessKey

  #
  # Server less
  #
  AlisAppDomain:
    Type: "AWS::SSM::Parameter"
    Properties:
      Name: !Sub "${AWS::StackName}AlisAppDomain"
      Description: |
        構築するALISアプリケーション環境で使用するドメイン
      Type: String
      Value: alis.to
  BetaModeFlag:
    Type: "AWS::SSM::Parameter"
    Properties:
      Name: !Sub "${AWS::StackName}BetaModeFlag"
      Description: |
        β版登録ユーザーか否かの判定に使用する。
        TODO: β版が完了した場合、オープンβとなった場合は除却
      Type: String
      Value: "0"
    DependsOn: AlisAppDomain
  SaltForArticleId:
    Type: "AWS::SSM::Parameter"
    Properties:
      Name: !Sub "${AWS::StackName}SaltForArticleId"
      Description: |
        記事IDを生成するためのsalt
      Type: String
      Value: "YOURSALTHERE"
    DependsOn: BetaModeFlag
  LoginSalt:
    Type: "AWS::SSM::Parameter"
    Properties:
      Name: !Sub "${AWS::StackName}LoginSalt"
      Description: |
        外部サービスログイン時のSalt
      Type: String
      Value: 'xxxxxxxxxxxxxxxxxxxxxx'
    DependsOn: SaltForArticleId

  #
  # Cognito
  #
  CognitoUserPoolId:
    Type: "AWS::SSM::Parameter"
    Properties:
      Name: !Sub "${AWS::StackName}CognitoUserPoolId"
      Type: String
      Value: ap-northeast-1_xxxxxxxxx
  CognitoUserPoolArn:
    Type: "AWS::SSM::Parameter"
    Properties:
      Name: !Sub "${AWS::StackName}CognitoUserPoolArn"
      Description: |
        API GatewayでAPIにCognito認証を付加するために使用している
        一度、Cognitoを作成したあとでこの値をSSMへ設定する必要がある
      Type: String
      Value: arn:aws:cognito-idp:ap-northeast-1:090123456789:userpool/ap-northeast-1_xxxxxxxxx
    DependsOn: CognitoUserPoolId
  CognitoUserPoolAppId:
    Type: "AWS::SSM::Parameter"
    Properties:
      Name: !Sub "${AWS::StackName}CognitoUserPoolAppId"
      Type: String
      Value: xxxxxxxxxxxxxxxxxxxxxxxxxxx
    DependsOn: CognitoUserPoolId

  #
  # DB Tables
  #
  ArticleAlisTokenTableName:
    Type: "AWS::SSM::Parameter"
    Properties:
      Name: !Sub "${AWS::StackName}ArticleAlisTokenTableName"
      Type: String
      Value: xxxxxdatabase-ArticleAlisToken-1JX1R6GSYY7Z3
  ArticleContentTableName:
    Type: "AWS::SSM::Parameter"
    Properties:
      Name: !Sub "${AWS::StackName}ArticleContentTableName"
      Type: String
      Value: xxxxxdatabase-ArticleContent-LK4W9VQPYFV6
    DependsOn: ArticleAlisTokenTableName
  ArticleContentEditTableName:
    Type: "AWS::SSM::Parameter"
    Properties:
      Name: !Sub "${AWS::StackName}ArticleContentEditTableName"
      Type: String
      Value: xxxxxdatabase-ArticleContentEdit-VAL74ANFPZ3X
    DependsOn: ArticleContentTableName
  ArticleEvaluatedManageTableName:
    Type: "AWS::SSM::Parameter"
    Properties:
      Name: !Sub "${AWS::StackName}ArticleEvaluatedManageTableName"
      Type: String
      Value: xxxxxdatabase-ArticleEvaluatedManage-FXS4PDYWVOL
    DependsOn: ArticleContentEditTableName
  ArticleFraudUserTableName:
    Type: "AWS::SSM::Parameter"
    Properties:
      Name: !Sub "${AWS::StackName}ArticleFraudUserTableName"
      Type: String
      Value: xxxxxdatabase-ArticleFraudUser-14BEI5E0ZQ24W
    DependsOn: ArticleEvaluatedManageTableName
  ArticleHistoryTableName:
    Type: "AWS::SSM::Parameter"
    Properties:
      Name: !Sub "${AWS::StackName}ArticleHistoryTableName"
      Type: String
      Value: xxxxxdatabase-ArticleHistory-W241YOWJS8G6
    DependsOn: ArticleFraudUserTableName
  ArticleInfoTableName:
    Type: "AWS::SSM::Parameter"
    Properties:
      Name: !Sub "${AWS::StackName}ArticleInfoTableName"
      Type: String
      Value: xxxxxdatabase-ArticleInfo-KHWNZI0XRJNO
    DependsOn: ArticleHistoryTableName
  ArticleLikedUserTableName:
    Type: "AWS::SSM::Parameter"
    Properties:
      Name: !Sub "${AWS::StackName}ArticleLikedUserTableName"
      Type: String
      Value: xxxxxdatabase-ArticleLikedUser-6QMRNHUN9K57
    DependsOn: ArticleInfoTableName
  ArticlePvUserTableName:
    Type: "AWS::SSM::Parameter"
    Properties:
      Name: !Sub "${AWS::StackName}ArticlePvUserTableName"
      Type: String
      Value: xxxxxdatabase-ArticlePvUser-1WGUK06VOC2P4
    DependsOn: ArticleLikedUserTableName
  ArticleScoreTableName:
    Type: "AWS::SSM::Parameter"
    Properties:
      Name: !Sub "${AWS::StackName}ArticleScoreTableName"
      Type: String
      Value: xxxxxdatabase-ArticleScore-1Q25TAIQTN69I
    DependsOn: ArticlePvUserTableName
  ArticleTokenAggregationTableName:
    Type: "AWS::SSM::Parameter"
    Properties:
      Name: !Sub "${AWS::StackName}ArticleTokenAggregationTableName"
      Type: String
      Value: xxxxxdatabase-ArticleTokenAggregation-1WLX6P9WRP521
    DependsOn: ArticleScoreTableName
  BetaUsersTableName:
    Type: "AWS::SSM::Parameter"
    Properties:
      Name: !Sub "${AWS::StackName}BetaUsersTableName"
      Type: String
      Value: xxxxxdatabase-BetaUsers-C26RYQA7R5LY
    DependsOn: ArticleTokenAggregationTableName
  LikeTokenAggregationTableName:
    Type: "AWS::SSM::Parameter"
    Properties:
      Name: !Sub "${AWS::StackName}LikeTokenAggregationTableName"
      Type: String
      Value: xxxxxdatabase-LikeTokenAggregation-3M847I26V9JZ
    DependsOn: BetaUsersTableName
  NotificationTableName:
    Type: "AWS::SSM::Parameter"
    Properties:
      Name: !Sub "${AWS::StackName}NotificationTableName"
      Type: String
      Value: xxxxxdatabase-NotificationTableName-78178E48C73D
    DependsOn: LikeTokenAggregationTableName
  UnreadNotificationManagerTableName:
    Type: "AWS::SSM::Parameter"
    Properties:
      Name: !Sub "${AWS::StackName}UnreadNotificationManagerTableName"
      Type: String
      Value: xxxxxdatabase-UnreadNotificationManagerTableName-60F35E5AAFD7
    DependsOn: NotificationTableName
  CommentTableName:
    Type: "AWS::SSM::Parameter"
    Properties:
      Name: !Sub "${AWS::StackName}CommentTableName"
      Type: String
      Value: xxxxxdatabase-Comment-NADVPF3KANFG
  CommentLikedUserTableName:
    Type: "AWS::SSM::Parameter"
    Properties:
      Name: !Sub "${AWS::StackName}CommentLikedUserTableName"
      Type: String
      Value: xxxxxdatabase-CommentLikedUser-XBHIBDTZRMEA
  DeletedCommentTableName:
    Type: "AWS::SSM::Parameter"
    Properties:
      Name: !Sub "${AWS::StackName}DeletedCommentTableName"
      Type: String
      Value: xxxxxdatabase-DeletedComment-RCME0XP7DU6M
  UsersTableName:
    Type: "AWS::SSM::Parameter"
    Properties:
      Name: !Sub "${AWS::StackName}UsersTableName"
      Type: String
      Value: xxxxxdatabase-Users-DTNLRZDH2JV9
    DependsOn: UnreadNotificationManagerTableName
  TopicTableName:
    Type: "AWS::SSM::Parameter"
    Properties:
      Name: !Sub "${AWS::StackName}TopicTableName"
      Type: String
      Value: xxxxxdatabase-Topic-DGRIT234F7D3
  TagTableName:
    Type: "AWS::SSM::Parameter"
    Properties:
      Name: !Sub "${AWS::StackName}TagTableName"
      Type: String
      Value: xxxxxdatabase-Tag-FJKL456RF65H
  TipTableName:
    Type: "AWS::SSM::Parameter"
    Properties:
      Name: !Sub "${AWS::StackName}TipTableName"
      Type: String
      Value: xxxxxdatabase-Tip-TEST456RF65H
  ExternalProviderUsersTableName:
    Type: "AWS::SSM::Parameter"
    Properties:
      Name: !Sub "${AWS::StackName}ExternalProviderUsersTableName"
      Type: String
      Value: xxxxxdatabase-ExternalProviderUsers-TEST456RF65H
  UserFraudTableName:
    Type: "AWS::SSM::Parameter"
    Properties:
      Name: !Sub "${AWS::StackName}UserFraudTableName"
      Type: String
      Value: xxxxxdatabase-UserFraud-TEST456RF65H
  ScreenedArticleTableName:
    Type: "AWS::SSM::Parameter"
    Properties:
      Name: !Sub "${AWS::StackName}ScreenedArticleTableName"
      Type: String
      Value: xxxxxdatabase-ScreenedArticle-11T1JVN14FGS7
  TokenDistributionTableName:
    Type: "AWS::SSM::Parameter"
    Properties:
      Name: !Sub "${AWS::StackName}TokenDistributionTableName"
      Type: String
      Value: xxxxxdatabase-TokenDistribution-11T1JVN14FGS7
  UserFirstExperienceTableName:
    Type: "AWS::SSM::Parameter"
    Properties:
      Name: !Sub "${AWS::StackName}UserFirstExperienceTableName"
      Type: String
      Value: xxxxxdatabase-UserFirstExperience-1XZRHGK7SFVYY
  NonceTableName:
    Type: "AWS::SSM::Parameter"
    Properties:
      Name: !Sub "${AWS::StackName}NonceTableName"
      Type: String
      Value: xxxxxdatabase-Nonce-TEST456RF65H

  #
  # ElasticSearch
  #
  ElasticSearchEndpoint:
    Type: "AWS::SSM::Parameter"
    Properties:
      Name: !Sub "${AWS::StackName}ElasticSearchEndpoint"
      Type: String
      Value: search-hogeapi-xxxxxxxxxxxxxxxxxxxxxxxxxx.us-east-2.es.amazonaws.com
  ApiLambdaRole:
    Type: "AWS::SSM::Parameter"
    Properties:
      Name: !Sub "${AWS::StackName}ApiLambdaRole"
      Description: |
        API側で作成したRoleのARNを指定する
      Type: String
      Value: arn:aws:iam::012345678901:role/hogeapi-LambdaRole-XXXXXXXXXXXXX

  #
  # Twitter Oauth
  #
  TwitterConsumerKey:
    Type: "AWS::SSM::Parameter"
    Properties:
      Name: !Sub "${AWS::StackName}TwitterConsumerKey"
      Description: |
        Twitterのコンシューマーキーを指定
      Type: String
      Value: xxxxxxxxxxxxxxxxxxxxxxxxxxxxx
  TwitterConsumerSecret:
    Type: "AWS::SSM::Parameter"
    Properties:
      Name: !Sub "${AWS::StackName}TwitterConsumerSecret"
      Description: |
        Twitterのコンシューマーシークレットを指定
      Type: String
      Value: xxxxxxxxxxxxxxxxxxxxxxxxxxxxx
  TwitterOauthCallbackUrl:
    Type: "AWS::SSM::Parameter"
    Properties:
      Name: !Sub "${AWS::StackName}TwitterOauthCallbackUrl"
      Description: |
        TwitterのコールバックURLを指定
      Type: String
      Value: xxxxxxxxxxxxxxxxxxxxxxxxxxxxx

  #
  # LINE Oauth
  #
  LineChannelId:
    Type: "AWS::SSM::Parameter"
    Properties:
      Name: !Sub "${AWS::StackName}LineChannelId"
      Description: |
        LINEのdeveloperアカウントのChannelId
      Type: String
      Value: "xxxxxxxx"
  LineChannelSecret:
    Type: "AWS::SSM::Parameter"
    Properties:
      Name: !Sub "${AWS::StackName}LineChannelSecret"
      Description: |
        LINEのdeveloperアカウントのLineChannelSecret
      Type: String
      Value: "xxxxxxxxxxxxxxxx"
    DependsOn: LineChannelId
  LineRedirectUri:
    Type: "AWS::SSM::Parameter"
    Properties:
      Name: !Sub "${AWS::StackName}LineRedirectUri"
      Description: |
        LINEログイン時のリダイレクトURL
      Type: String
      Value: 'https://xxxxxxxxxxxxx'
    DependsOn: LineChannelSecret
  ExternalProviderLoginMark:
    Type: "AWS::SSM::Parameter"
    Properties:
      Name: !Sub "${AWS::StackName}ExternalProviderLoginMark"
      Description: |
        外部サービスでのログイン判定パラメータ
      Type: String
      Value: 'xxxxxxxx'
    DependsOn: LineRedirectUri
  ExternalProviderLoginCommonTempPassword:
    Type: "AWS::SSM::Parameter"
    Properties:
      Name: !Sub "${AWS::StackName}ExternalProviderLoginCommonTempPassword"
      Description: |
        外部サービス認証に使う共通の一時パスワードを指定。各環境で独自に生成してください
      Type: String
      Value: xxxxxxxxxxxxxxxxxxxxxxxxxxxxx
    DependsOn: ExternalProviderLoginMark

  #
  # Yahoo Oauth
  #
  YahooClientId:
    Type: "AWS::SSM::Parameter"
    Properties:
      Name: !Sub "${AWS::StackName}YahooClientId"
      Description: |
        Yahoo API用のClientIdを指定
      Type: String
      Value: xxxxxxxxxxxxxxxxxxxxxxxxxxxxx
  YahooSecret:
    Type: "AWS::SSM::Parameter"
    Properties:
      Name: !Sub "${AWS::StackName}YahooSecret"
      Description: |
        Yahoo API用のSecretを指定
      Type: String
      Value: xxxxxxxxxxxxxxxxxxxxxxxxxxxxx
  YahooOauthCallbackUrl:
    Type: "AWS::SSM::Parameter"
    Properties:
      Name: !Sub "${AWS::StackName}YahooOauthCallbackUrl"
      Description: |
        Yahoo LoginのコールバックURLを指定
      Type: String
      Value: xxxxxxxxxxxxxxxxxxxxxxxxxxxxx
  YahooExternalProviderLoginCommonTempPassword:
    Type: "AWS::SSM::Parameter"
    Properties:
      Name: !Sub "${AWS::StackName}YahooExternalProviderLoginCommonTempPassword"
      Description: |
        外部サービス認証に使う共通の一時パスワードを指定。各環境で独自に生成してください
      Type: String
      Value: xxxxxxxxxxxxxxxxxxxxxxxxxxxxx

  #
  # Front end
  # TODO: ALIS-953
  #
  DistS3BucketName:
    Type: "AWS::SSM::Parameter"
    Properties:
      Name: !Sub "${AWS::StackName}DistS3BucketName"
      Description: |
        アプリケーションのファイル(画像など)を配置するためのS3バケット名
        サーバサイドアプリケーションでも使用する
      Type: String
      Value: !Sub "${AWS::StackName}-dist-s3-bucket"
    DependsOn: AlisAppDomain

  #
  # batch
  # FYI: batchリポジトリのSSMパラメータのみ、batchリポジトリ自身が保持しているのでそちらを参照
  #
